
services:
  # ---------- DATABASE ----------
  db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: deviceproject_db
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${MSSQL_SA_PASSWORD}
    ports:
      - "1433:1433"
    volumes:
      - mssql-data:/var/opt/mssql
    networks:
      - device-net

  # ---------- BACKEND ----------
  backend:
    build:
      context: ./src
      dockerfile: Dockerfile.dev     # uses SDK + dotnet watch
    image: deviceproject-backend-dev
    container_name: deviceproject_backend_dev
    depends_on:
      - db
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=${CONNECTION_STRING}
      - JWT__Secret=${JWT_SECRET}
      - JWT__ValidIssuer=${JWT_ISSUER}
      - JWT__ValidAudience=${JWT_AUDIENCE}
    ports:
      - "5000:5000"
    networks:
      - device-net
    volumes:
      - ./src:/workspace:cached
      - ~/.nuget:/root/.nuget:cached
    working_dir: /workspace/API
    command: >
      sh -c "dotnet restore && dotnet watch run --no-launch-profile --urls=http://0.0.0.0:5000"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 6

  # ---------- FRONTEND ----------
  frontend:
    build:
      context: ./web
      dockerfile: Dockerfile.dev     # this is a dev Dockerfile (see below)
    image: deviceproject-frontend-dev
    container_name: deviceproject_frontend_dev
    depends_on:
      - backend
    environment:
      # Points to backend API reachable from host browser
      - VITE_API_BASE_URL=http://localhost:5000/api
    ports:
      - "3000:3000"
    networks:
      - device-net
    volumes:
      - ./web:/app:cached
      - /app/node_modules        # keep container node_modules intact
    working_dir: /app
    command: >
      sh -c "npm install && npm run dev -- --host 0.0.0.0 --port 3000"

volumes:
  mssql-data:

networks:
  device-net:
    driver: bridge
