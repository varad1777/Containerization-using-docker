version: "3.8"

services:
  db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: deviceproject_db
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${MSSQL_SA_PASSWORD}
    ports:
      - "1433:1433"         # optional for local DB access
    volumes:
      - mssql-data:/var/opt/mssql
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P $${MSSQL_SA_PASSWORD} -Q 'SELECT 1' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  backend:
    build:
      context: ./src
      dockerfile: MyBackend.Api/Dockerfile
    image: deviceproject-backend:dev
    container_name: deviceproject_backend
    depends_on:
      - db
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ConnectionStrings__DefaultConnection=${CONNECTION_STRING}
      - JWT__Secret=${JWT_SECRET}
      - JWT__ValidIssuer=${JWT_ISSUER}
      - JWT__ValidAudience=${JWT_AUDIENCE}
    ports:
      - "5000:5000"
    networks:
      - device-net
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 6

  frontend:
    build:
      context: ./web
      dockerfile: Dockerfile
    image: deviceproject-frontend:dev
    container_name: deviceproject_frontend
    depends_on:
      - backend
    environment:
      - REACT_APP_API_BASE_URL=${REACT_APP_API_BASE_URL}
    ports:
      - "3000:3000"
    networks:
      - device-net

  # one-off migration runner â€” run it manually when you want to apply DB schema changes in a controlled way
  migrate:
    image: mcr.microsoft.com/dotnet/sdk:7.0
    entrypoint: [ "bash", "-c" ]
    command: >
      "cd /src/MyBackend.Api &&
       dotnet tool restore || true &&
       dotnet ef database update --no-build"
    volumes:
      - ./src:/src:cached
    environment:
      - ConnectionStrings__DefaultConnection=${CONNECTION_STRING}
      - MSSQL_SA_PASSWORD=${MSSQL_SA_PASSWORD}
    depends_on:
      - db
    networks:
      - device-net
    # don't start automatically with compose up; use `docker-compose run migrate`

volumes:
  mssql-data:

networks:
  device-net:
    driver: bridge
