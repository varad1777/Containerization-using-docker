# version: "3.9"

services:
  db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: deviceproject_db
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${MSSQL_SA_PASSWORD}
    ports:
      - "1433:1433"
    volumes:
      - mssql-data:/var/opt/mssql
    networks:
      - device-net
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P \"$${MSSQL_SA_PASSWORD}\" -Q \"SELECT 1\" || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 6

  rabbitmq:
    image: rabbitmq:3-management
    container_name: deviceproject_rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER:-guest}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS:-guest}
    ports:
      - "5672:5672"     # AMQP
      - "15672:15672"   # management UI
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - device-net
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 6
    restart: unless-stopped

  backend:
    build:
      context: ./src
      dockerfile: API/Dockerfile
    image: deviceproject-backend:dev
    container_name: deviceproject_backend
    depends_on:
      - db
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ConnectionStrings__DefaultConnection=${CONNECTION_STRING}
      - JWT__Secret=${JWT_SECRET}
      - JWT__ValidIssuer=${JWT_ISSUER}
      - JWT__ValidAudience=${JWT_AUDIENCE}
      - RabbitMq__Host=rabbitmq                # ensure backend uses service name
      - RabbitMq__User=${RABBITMQ_DEFAULT_USER}
      - RabbitMq__Password=${RABBITMQ_DEFAULT_PASS}
    ports:
      - "5000:5000"
    networks:
      - device-net
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 6
    restart: unless-stopped

  worker:
    build:
      context: ./Worker
      dockerfile: Dockerfile
    image: deviceproject-worker:dev
    container_name: deviceproject_worker
    depends_on:
      - db
      - rabbitmq
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ConnectionStrings__DefaultConnection=${CONNECTION_STRING}
      - RabbitMq__Host=rabbitmq
      - RabbitMq__User=${RABBITMQ_DEFAULT_USER}
      - RabbitMq__Password=${RABBITMQ_DEFAULT_PASS}
      # optional: control simulated processing speed from env
      - WORKER_PROCESSING_DELAY_MS=${WORKER_PROCESSING_DELAY_MS:-5000}
    networks:
      - device-net
    restart: unless-stopped
    # no ports required for a worker

  frontend:
    build:
      context: ./web
      dockerfile: Dockerfile
    image: deviceproject-frontend:dev
    container_name: deviceproject_frontend
    depends_on:
      - backend
    environment:
      - VITE_API_BASE_URL=http://localhost:5000/api
    ports:
      - "3000:3000"
    networks:
      - device-net

volumes:
  mssql-data:
  rabbitmq-data:

networks:
  device-net:
    driver: bridge
